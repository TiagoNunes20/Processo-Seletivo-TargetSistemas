//2º)Exemplo em Python:

num = int(input("Digite um número: "))

fibonacci = [0, 1]

enquanto fibonacci[-1] < num:
fibonacci.append(fibonacci[-1] + fibonacci[-2])

se num em fibonacci:
print(f"O número {num} pertence à sequência de Fibonacci.")
mais:
print(f"O número {num} não pertence à sequência de Fibonacci.")

//3º)É permitido utilizar bibliotecas externas para manipulação de json/xml.

Exemplo de vetor de faturamento diário em formato json:

{
"faturamento": [
{
"dados": "2021-08-02",
"valor": 1500
},
{
"dados": "2021-08-03",
"valor": 2000
},
{
"dados": "2021-08-04",
"valor": 1800
},
{
"dados": "2021-08-05",
"valor": 2200
},
{
"dados": "2021-08-06",
"valor": 1900
},
{
"dados": "2021-08-07",
"valor": 0
},
{
"dados": "2021-08-08",
"valor": 0
},
{
"dados": "2021-08-09",
"valor": 1700
},
{
"dados": "2021-08-10",
"valor": 2100
},
{
"dados": "2021-08-11",
"valor": 1950
},
{
"dados": "2021-08-12",
"valor": 2450
},
{
"dados": "2021-08-13",
"valor": 2300
},
{
"dados": "2021-08-14",
"valor": 2050
},
{
"dados": "2021-08-15",
"valor": 0
},
{
"dados": "2021-08-16",
"valor": 2700
},
{
"dados": "2021-08-17",
"valor": 1900
},
{
"dados": "2021-08-18",
"valor": 2100
},
{
"dados": "2021-08-19",
"valor": 1850
},
{
"dados": "2021-08-20",
"valor": 2200
},
{
"dados": "2021-08-21",
"valor": 1950
},
{
"dados": "2021-08-22",
"valor": 0
},
{
"dados": "2021-08-23",
"valor": 2050
},
{
"dados": "2021-08-24",
"valor": 2250
},
{
"dados": "2021-08-25",
"valor": 2350
},
{
"dados": "2021-08-26",
"valor": 2150
},
{
"dados": "2021-08-27",
"valor": 2000
},
{
"dados": "2021-08-28",
"valor": 2300
},
{
"dados": "2021-08-29",
"valor": 0
},
{
"dados": "2021-08-30",
"valor": 2400
},
{
"dados": "2021-08-31",
"valor": 2100
}
]
}

Exemplo de programa em Python para resolver o problema:

json importação

leitura do json com o vetor de faturamento diário
com open('faturamento.json', 'r') como f:
dados = json.load(f)

faturamento = data['faturamento']

cálculo do menor valor e do maior valor de faturamento diário
menor_valor = float('inf')
maior_valor = float('-inf')
para dia em faturamento:
valor = dia['valor']
se o valor > 0:
se o valor < menor_valor:
menor_valor = valor
se o valor > maior_valor:
maior_valor = valor

cálculo da média mensal, considerando apenas dias com faturamento
total_faturamento = 0
num_dias_com_faturamento = 0
para dia em faturamento:
valor = dia['valor']
se o valor > 0:
total_faturamento += valor
num_dias_com_faturamento += 1

media_mensal = total_faturamento / num_dias_com_faturamento

cálculo do número de dias no mês em que o valor de faturamento diário foi superior à média mensal

//4º)faturamento = {"SP": 67836.43, "RJ": 36678.66, "MG": 29229.88, "ES": 27165.48, "Outros": 19849.53}

total_faturamento = soma(faturamento.valores())

representacao = {}
for estado, valor in faturamento.items():
representacao[estado] = (valor / total_faturamento) * 100

print("Percentual de representação do faturamento por estado:")
para estado, valor in representacao.items():
print(f"{estado}: {valor:.2f}%")

//5º)Uma maneira de inverter os caracteres de um string é usando um loop for para percorrer a string a partir do último caractere até o primeiro, e concatenar cada caractere em uma nova string que será a inversa da original.

Segue um exemplo de implementação em Python:

string = input("Informe a string que deseja inverter: ")

inversa = ""

for i in range(len(string)-1, -1, -1):
    inversa += string[i]

print("A string inversa é:", inversa)
Explicando o código:

Recebemos uma string do usuário através da função input()
Definimos uma string vazia chamada inversa que será usada para armazenar a nova string invertida.
Usando um loop for, percorremos a string original começando do último caractere (len(string)-1) e terminando no primeiro (-1), com passo -1, ou seja, percorrendo-a de trás para frente.
Em cada iteração, concatenamos o caractere atual da string original na variável inversa.
Ao final do loop, exibimos a nova string inversa usando a função print().
Exemplo de execução:

Informe a string que deseja inverter: abcd123
A string inversa é: 321dcba
